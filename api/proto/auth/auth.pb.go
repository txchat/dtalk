// protoc -I=. -I=$GOPATH/src --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: github.com/txchat/dtalk/api/proto/auth.proto

package auth

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Device int32

const (
	Device_Android Device = 0
	Device_IOS     Device = 1
	Device_Windows Device = 2
	Device_Linux   Device = 3
	Device_MacOS   Device = 4
	Device_Web     Device = 5
)

// Enum value maps for Device.
var (
	Device_name = map[int32]string{
		0: "Android",
		1: "IOS",
		2: "Windows",
		3: "Linux",
		4: "MacOS",
		5: "Web",
	}
	Device_value = map[string]int32{
		"Android": 0,
		"IOS":     1,
		"Windows": 2,
		"Linux":   3,
		"MacOS":   4,
		"Web":     5,
	}
)

func (x Device) Enum() *Device {
	p := new(Device)
	*p = x
	return p
}

func (x Device) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Device) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_txchat_dtalk_api_proto_auth_proto_enumTypes[0].Descriptor()
}

func (Device) Type() protoreflect.EnumType {
	return &file_github_com_txchat_dtalk_api_proto_auth_proto_enumTypes[0]
}

func (x Device) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Device.Descriptor instead.
func (Device) EnumDescriptor() ([]byte, []int) {
	return file_github_com_txchat_dtalk_api_proto_auth_proto_rawDescGZIP(), []int{0}
}

type Login_ConnType int32

const (
	Login_Connect   Login_ConnType = 0
	Login_Reconnect Login_ConnType = 1
)

// Enum value maps for Login_ConnType.
var (
	Login_ConnType_name = map[int32]string{
		0: "Connect",
		1: "Reconnect",
	}
	Login_ConnType_value = map[string]int32{
		"Connect":   0,
		"Reconnect": 1,
	}
)

func (x Login_ConnType) Enum() *Login_ConnType {
	p := new(Login_ConnType)
	*p = x
	return p
}

func (x Login_ConnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Login_ConnType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_txchat_dtalk_api_proto_auth_proto_enumTypes[1].Descriptor()
}

func (Login_ConnType) Type() protoreflect.EnumType {
	return &file_github_com_txchat_dtalk_api_proto_auth_proto_enumTypes[1]
}

func (x Login_ConnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Login_ConnType.Descriptor instead.
func (Login_ConnType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_txchat_dtalk_api_proto_auth_proto_rawDescGZIP(), []int{0, 0}
}

type Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device      Device         `protobuf:"varint,1,opt,name=device,proto3,enum=dtalk.api.proto.Device" json:"device,omitempty"`
	Username    string         `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	DeviceToken string         `protobuf:"bytes,3,opt,name=deviceToken,proto3" json:"deviceToken,omitempty"`
	ConnType    Login_ConnType `protobuf:"varint,4,opt,name=connType,proto3,enum=dtalk.api.proto.Login_ConnType" json:"connType,omitempty"`
	Uuid        string         `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	DeviceName  string         `protobuf:"bytes,6,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
}

func (x *Login) Reset() {
	*x = Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_txchat_dtalk_api_proto_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login) ProtoMessage() {}

func (x *Login) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_txchat_dtalk_api_proto_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login.ProtoReflect.Descriptor instead.
func (*Login) Descriptor() ([]byte, []int) {
	return file_github_com_txchat_dtalk_api_proto_auth_proto_rawDescGZIP(), []int{0}
}

func (x *Login) GetDevice() Device {
	if x != nil {
		return x.Device
	}
	return Device_Android
}

func (x *Login) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Login) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *Login) GetConnType() Login_ConnType {
	if x != nil {
		return x.ConnType
	}
	return Login_Connect
}

func (x *Login) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Login) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

var File_github_com_txchat_dtalk_api_proto_auth_proto protoreflect.FileDescriptor

var file_github_com_txchat_dtalk_api_proto_auth_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x78, 0x63,
	0x68, 0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8f, 0x02, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x74, 0x61, 0x6c,
	0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x64, 0x74, 0x61,
	0x6c, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x08, 0x43, 0x6f, 0x6e,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10,
	0x01, 0x2a, 0x4a, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x41,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4f, 0x53, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x63,
	0x4f, 0x53, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x65, 0x62, 0x10, 0x05, 0x42, 0x2d, 0x5a,
	0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x78, 0x63, 0x68,
	0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_txchat_dtalk_api_proto_auth_proto_rawDescOnce sync.Once
	file_github_com_txchat_dtalk_api_proto_auth_proto_rawDescData = file_github_com_txchat_dtalk_api_proto_auth_proto_rawDesc
)

func file_github_com_txchat_dtalk_api_proto_auth_proto_rawDescGZIP() []byte {
	file_github_com_txchat_dtalk_api_proto_auth_proto_rawDescOnce.Do(func() {
		file_github_com_txchat_dtalk_api_proto_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_txchat_dtalk_api_proto_auth_proto_rawDescData)
	})
	return file_github_com_txchat_dtalk_api_proto_auth_proto_rawDescData
}

var file_github_com_txchat_dtalk_api_proto_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_github_com_txchat_dtalk_api_proto_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_txchat_dtalk_api_proto_auth_proto_goTypes = []interface{}{
	(Device)(0),         // 0: dtalk.api.proto.Device
	(Login_ConnType)(0), // 1: dtalk.api.proto.Login.ConnType
	(*Login)(nil),       // 2: dtalk.api.proto.Login
}
var file_github_com_txchat_dtalk_api_proto_auth_proto_depIdxs = []int32{
	0, // 0: dtalk.api.proto.Login.device:type_name -> dtalk.api.proto.Device
	1, // 1: dtalk.api.proto.Login.connType:type_name -> dtalk.api.proto.Login.ConnType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_github_com_txchat_dtalk_api_proto_auth_proto_init() }
func file_github_com_txchat_dtalk_api_proto_auth_proto_init() {
	if File_github_com_txchat_dtalk_api_proto_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_txchat_dtalk_api_proto_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_txchat_dtalk_api_proto_auth_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_txchat_dtalk_api_proto_auth_proto_goTypes,
		DependencyIndexes: file_github_com_txchat_dtalk_api_proto_auth_proto_depIdxs,
		EnumInfos:         file_github_com_txchat_dtalk_api_proto_auth_proto_enumTypes,
		MessageInfos:      file_github_com_txchat_dtalk_api_proto_auth_proto_msgTypes,
	}.Build()
	File_github_com_txchat_dtalk_api_proto_auth_proto = out.File
	file_github_com_txchat_dtalk_api_proto_auth_proto_rawDesc = nil
	file_github_com_txchat_dtalk_api_proto_auth_proto_goTypes = nil
	file_github_com_txchat_dtalk_api_proto_auth_proto_depIdxs = nil
}
