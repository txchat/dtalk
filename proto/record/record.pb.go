// protoc -I=. -I=$GOPATH/src --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: github.com/txchat/dtalk/proto/record.proto

package record

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Operation int32

const (
	Operation_BatchPush Operation = 0
	Operation_MarkRead  Operation = 1
	Operation_StoreMsg  Operation = 2
	Operation_SyncMsg   Operation = 3
)

// Enum value maps for Operation.
var (
	Operation_name = map[int32]string{
		0: "BatchPush",
		1: "MarkRead",
		2: "StoreMsg",
		3: "SyncMsg",
	}
	Operation_value = map[string]int32{
		"BatchPush": 0,
		"MarkRead":  1,
		"StoreMsg":  2,
		"SyncMsg":   3,
	}
)

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}

func (x Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_txchat_dtalk_proto_record_proto_enumTypes[0].Descriptor()
}

func (Operation) Type() protoreflect.EnumType {
	return &file_github_com_txchat_dtalk_proto_record_proto_enumTypes[0]
}

func (x Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation.Descriptor instead.
func (Operation) EnumDescriptor() ([]byte, []int) {
	return file_github_com_txchat_dtalk_proto_record_proto_rawDescGZIP(), []int{0}
}

// record --> mq
type PushMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	FromId    string `protobuf:"bytes,2,opt,name=fromId,proto3" json:"fromId,omitempty"`
	Mid       int64  `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`
	Key       string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Target    string `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"` //推送目标 用户id 或者 群id
	Msg       []byte `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	Type      int32  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	FrameType string `protobuf:"bytes,8,opt,name=frameType,proto3" json:"frameType,omitempty"`
}

func (x *PushMsg) Reset() {
	*x = PushMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_txchat_dtalk_proto_record_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMsg) ProtoMessage() {}

func (x *PushMsg) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_txchat_dtalk_proto_record_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMsg.ProtoReflect.Descriptor instead.
func (*PushMsg) Descriptor() ([]byte, []int) {
	return file_github_com_txchat_dtalk_proto_record_proto_rawDescGZIP(), []int{0}
}

func (x *PushMsg) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *PushMsg) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *PushMsg) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *PushMsg) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PushMsg) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *PushMsg) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PushMsg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PushMsg) GetFrameType() string {
	if x != nil {
		return x.FrameType
	}
	return ""
}

// record --> mq
type RecordDeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string    `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	FromId string    `protobuf:"bytes,2,opt,name=fromId,proto3" json:"fromId,omitempty"`
	Key    string    `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Opt    Operation `protobuf:"varint,4,opt,name=opt,proto3,enum=dtalk.record.Operation" json:"opt,omitempty"`
	Msg    []byte    `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RecordDeal) Reset() {
	*x = RecordDeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_txchat_dtalk_proto_record_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordDeal) ProtoMessage() {}

func (x *RecordDeal) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_txchat_dtalk_proto_record_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordDeal.ProtoReflect.Descriptor instead.
func (*RecordDeal) Descriptor() ([]byte, []int) {
	return file_github_com_txchat_dtalk_proto_record_proto_rawDescGZIP(), []int{1}
}

func (x *RecordDeal) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RecordDeal) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *RecordDeal) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RecordDeal) GetOpt() Operation {
	if x != nil {
		return x.Opt
	}
	return Operation_BatchPush
}

func (x *RecordDeal) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// Operation=MarkRead
type Marked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Mids []int64 `protobuf:"varint,2,rep,packed,name=mids,proto3" json:"mids,omitempty"`
}

func (x *Marked) Reset() {
	*x = Marked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_txchat_dtalk_proto_record_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Marked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Marked) ProtoMessage() {}

func (x *Marked) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_txchat_dtalk_proto_record_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Marked.ProtoReflect.Descriptor instead.
func (*Marked) Descriptor() ([]byte, []int) {
	return file_github_com_txchat_dtalk_proto_record_proto_rawDescGZIP(), []int{2}
}

func (x *Marked) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Marked) GetMids() []int64 {
	if x != nil {
		return x.Mids
	}
	return nil
}

// Operation=SyncMsg
type Sync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *Sync) Reset() {
	*x = Sync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_txchat_dtalk_proto_record_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sync) ProtoMessage() {}

func (x *Sync) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_txchat_dtalk_proto_record_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sync.ProtoReflect.Descriptor instead.
func (*Sync) Descriptor() ([]byte, []int) {
	return file_github_com_txchat_dtalk_proto_record_proto_rawDescGZIP(), []int{3}
}

func (x *Sync) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

var File_github_com_txchat_dtalk_proto_record_proto protoreflect.FileDescriptor

var file_github_com_txchat_dtalk_proto_record_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x78, 0x63,
	0x68, 0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x74,
	0x61, 0x6c, 0x6b, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x07, 0x50,
	0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x72,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44,
	0x65, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f,
	0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x30, 0x0a, 0x06, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x6d, 0x69,
	0x64, 0x73, 0x22, 0x18, 0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x2a, 0x43, 0x0a, 0x09,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x75, 0x73, 0x68, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b,
	0x52, 0x65, 0x61, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d,
	0x73, 0x67, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x10,
	0x03, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x78, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_github_com_txchat_dtalk_proto_record_proto_rawDescOnce sync.Once
	file_github_com_txchat_dtalk_proto_record_proto_rawDescData = file_github_com_txchat_dtalk_proto_record_proto_rawDesc
)

func file_github_com_txchat_dtalk_proto_record_proto_rawDescGZIP() []byte {
	file_github_com_txchat_dtalk_proto_record_proto_rawDescOnce.Do(func() {
		file_github_com_txchat_dtalk_proto_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_txchat_dtalk_proto_record_proto_rawDescData)
	})
	return file_github_com_txchat_dtalk_proto_record_proto_rawDescData
}

var file_github_com_txchat_dtalk_proto_record_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_txchat_dtalk_proto_record_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_txchat_dtalk_proto_record_proto_goTypes = []interface{}{
	(Operation)(0),     // 0: dtalk.record.Operation
	(*PushMsg)(nil),    // 1: dtalk.record.PushMsg
	(*RecordDeal)(nil), // 2: dtalk.record.RecordDeal
	(*Marked)(nil),     // 3: dtalk.record.Marked
	(*Sync)(nil),       // 4: dtalk.record.Sync
}
var file_github_com_txchat_dtalk_proto_record_proto_depIdxs = []int32{
	0, // 0: dtalk.record.RecordDeal.opt:type_name -> dtalk.record.Operation
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_github_com_txchat_dtalk_proto_record_proto_init() }
func file_github_com_txchat_dtalk_proto_record_proto_init() {
	if File_github_com_txchat_dtalk_proto_record_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_txchat_dtalk_proto_record_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_txchat_dtalk_proto_record_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordDeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_txchat_dtalk_proto_record_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Marked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_txchat_dtalk_proto_record_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_txchat_dtalk_proto_record_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_txchat_dtalk_proto_record_proto_goTypes,
		DependencyIndexes: file_github_com_txchat_dtalk_proto_record_proto_depIdxs,
		EnumInfos:         file_github_com_txchat_dtalk_proto_record_proto_enumTypes,
		MessageInfos:      file_github_com_txchat_dtalk_proto_record_proto_msgTypes,
	}.Build()
	File_github_com_txchat_dtalk_proto_record_proto = out.File
	file_github_com_txchat_dtalk_proto_record_proto_rawDesc = nil
	file_github_com_txchat_dtalk_proto_record_proto_goTypes = nil
	file_github_com_txchat_dtalk_proto_record_proto_depIdxs = nil
}
