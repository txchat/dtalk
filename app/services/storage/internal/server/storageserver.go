// Code generated by goctl. DO NOT EDIT.
// Source: storage.proto

package server

import (
	"context"

	"github.com/txchat/dtalk/app/services/storage/internal/logic"
	"github.com/txchat/dtalk/app/services/storage/internal/svc"
	"github.com/txchat/dtalk/app/services/storage/storage"
)

type StorageServer struct {
	svcCtx *svc.ServiceContext
	storage.UnimplementedStorageServer
}

func NewStorageServer(svcCtx *svc.ServiceContext) *StorageServer {
	return &StorageServer{
		svcCtx: svcCtx,
	}
}

func (s *StorageServer) DelRecord(ctx context.Context, in *storage.DelRecordReq) (*storage.DelRecordReply, error) {
	l := logic.NewDelRecordLogic(ctx, s.svcCtx)
	return l.DelRecord(in)
}

func (s *StorageServer) GetRecord(ctx context.Context, in *storage.GetRecordReq) (*storage.GetRecordReply, error) {
	l := logic.NewGetRecordLogic(ctx, s.svcCtx)
	return l.GetRecord(in)
}

func (s *StorageServer) AddRecordFocus(ctx context.Context, in *storage.AddRecordFocusReq) (*storage.AddRecordFocusReply, error) {
	l := logic.NewAddRecordFocusLogic(ctx, s.svcCtx)
	return l.AddRecordFocus(in)
}

func (s *StorageServer) GetChatSessionMsg(ctx context.Context, in *storage.GetChatSessionMsgReq) (*storage.GetChatSessionMsgReply, error) {
	l := logic.NewGetChatSessionMsgLogic(ctx, s.svcCtx)
	return l.GetChatSessionMsg(in)
}
