// Code generated by goctl. DO NOT EDIT!
// Source: call.proto

package server

import (
	"context"

	"github.com/txchat/dtalk/app/services/call/call"
	"github.com/txchat/dtalk/app/services/call/internal/logic"
	"github.com/txchat/dtalk/app/services/call/internal/svc"
)

type CallServer struct {
	svcCtx *svc.ServiceContext
	call.UnimplementedCallServer
}

func NewCallServer(svcCtx *svc.ServiceContext) *CallServer {
	return &CallServer{
		svcCtx: svcCtx,
	}
}

func (s *CallServer) PrivateOffer(ctx context.Context, in *call.PrivateOfferReq) (*call.PrivateOfferResp, error) {
	l := logic.NewPrivateOfferLogic(ctx, s.svcCtx)
	return l.PrivateOffer(in)
}

func (s *CallServer) GroupOffer(ctx context.Context, in *call.GroupOfferReq) (*call.GroupOfferResp, error) {
	l := logic.NewGroupOfferLogic(ctx, s.svcCtx)
	return l.GroupOffer(in)
}

func (s *CallServer) Accept(ctx context.Context, in *call.AcceptReq) (*call.AcceptResp, error) {
	l := logic.NewAcceptLogic(ctx, s.svcCtx)
	return l.Accept(in)
}

func (s *CallServer) Reject(ctx context.Context, in *call.RejectReq) (*call.RejectResp, error) {
	l := logic.NewRejectLogic(ctx, s.svcCtx)
	return l.Reject(in)
}

func (s *CallServer) CheckTask(ctx context.Context, in *call.CheckTaskReq) (*call.CheckTaskResp, error) {
	l := logic.NewCheckTaskLogic(ctx, s.svcCtx)
	return l.CheckTask(in)
}
