// Code generated by goctl. DO NOT EDIT.
// Source: transfer.proto

package transferclient

import (
	"context"

	"github.com/txchat/dtalk/app/services/transfer/transfer"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PreSendMessageCheckReq  = transfer.PreSendMessageCheckReq
	PreSendMessageCheckResp = transfer.PreSendMessageCheckResp
	TransferMessageReq      = transfer.TransferMessageReq
	TransferMessageResp     = transfer.TransferMessageResp

	Transfer interface {
		TransferMessage(ctx context.Context, in *TransferMessageReq, opts ...grpc.CallOption) (*TransferMessageResp, error)
		PreSendMessageCheck(ctx context.Context, in *PreSendMessageCheckReq, opts ...grpc.CallOption) (*PreSendMessageCheckResp, error)
	}

	defaultTransfer struct {
		cli zrpc.Client
	}
)

func NewTransfer(cli zrpc.Client) Transfer {
	return &defaultTransfer{
		cli: cli,
	}
}

func (m *defaultTransfer) TransferMessage(ctx context.Context, in *TransferMessageReq, opts ...grpc.CallOption) (*TransferMessageResp, error) {
	client := transfer.NewTransferClient(m.cli.Conn())
	return client.TransferMessage(ctx, in, opts...)
}

func (m *defaultTransfer) PreSendMessageCheck(ctx context.Context, in *PreSendMessageCheckReq, opts ...grpc.CallOption) (*PreSendMessageCheckResp, error) {
	client := transfer.NewTransferClient(m.cli.Conn())
	return client.PreSendMessageCheck(ctx, in, opts...)
}
