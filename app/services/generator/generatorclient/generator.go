// Code generated by goctl. DO NOT EDIT!
// Source: generator.proto

package generatorclient

import (
	"context"

	"github.com/txchat/dtalk/app/services/generator/generator"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetIDReply = generator.GetIDReply
	GetIDReq   = generator.GetIDReq

	Generator interface {
		GetID(ctx context.Context, in *GetIDReq, opts ...grpc.CallOption) (*GetIDReply, error)
	}

	defaultGenerator struct {
		cli zrpc.Client
	}
)

func NewGenerator(cli zrpc.Client) Generator {
	return &defaultGenerator{
		cli: cli,
	}
}

func (m *defaultGenerator) GetID(ctx context.Context, in *GetIDReq, opts ...grpc.CallOption) (*GetIDReply, error) {
	client := generator.NewGeneratorClient(m.cli.Conn())
	return client.GetID(ctx, in, opts...)
}
