// Code generated by goctl. DO NOT EDIT.
package types

type StartCallReq struct {
	GroupId  string   `json:"groupId"`
	Invitees []string `json:"invitees"`
	RTCType  int32    `json:"RTCType,options=1|2"`
}

type StartCallResp struct {
	TraceId    int64    `json:"traceId"`
	TraceIdStr string   `json:"traceIdStr"`
	RTCType    int32    `json:"RTCType"`
	Invitees   []string `json:"invitees"`
	Caller     string   `json:"caller"`
	CreateTime int64    `json:"createTime"`
	Timeout    int32    `json:"timeout"`
	Deadline   int64    `json:"deadline"`
	GroupId    string   `json:"groupId"` // 0表示私聊, 其他表示群聊
}

type ReplyBusyReq struct {
	TraceId    int64  `json:"traceId"`
	TraceIdStr string `json:"traceIdStr,optional"` // 如果同时填了 tracedIdStr, 则优先选择 traceIdStr
}

type ReplyBusyResp struct {
}

type CheckCallReq struct {
	TraceId    int64  `json:"traceId"`
	TraceIdStr string `json:"traceIdStr,optional"` // 如果同时填了 tracedIdStr, 则优先选择 traceIdStr
}

type CheckCallResp struct {
	TraceId    int64    `json:"traceId"`
	TraceIdStr string   `json:"traceIdStr"`
	RTCType    int32    `json:"RTCType"`
	Invitees   []string `json:"invitees"`
	Caller     string   `json:"caller"`
	CreateTime int64    `json:"createTime"`
	Timeout    int32    `json:"timeout"`
	Deadline   int64    `json:"deadline"`
	GroupId    string   `json:"groupId"` // 0表示私聊, 其他表示群聊
}

type HandleCallReq struct {
	Answer     bool   `json:"answer"`
	TraceId    int64  `json:"traceId"`
	TraceIdStr string `json:"traceIdStr,optional"` // 如果同时填了 tracedIdStr, 则优先选择 traceIdStr
}

type HandleCallResp struct {
	RoomId        int32  `json:"roomId"`
	UserSig       string `json:"userSig"`
	PrivateMapKey string `json:"privateMapKey"`
	SDKAppId      int32  `json:"sdkAppId"`
}

type RevokeReq struct {
	Type int   `json:"type,optional" enums:"0,1"`
	Mid  int64 `json:"logId"`
}

type RevokeResp struct {
}

type FocusReq struct {
	Type int   `json:"type,optional" enums:"0,1"`
	Mid  int64 `json:"logId"`
}

type FocusResp struct {
}

type SyncReq struct {
	MaxCount int64 `json:"count,range=[1:1000]"`
	StartMid int64 `json:"start,optional"`
}

type SyncResp struct {
	RecordCount int      `json:"record_count"`
	Records     []string `json:"records"`
}

type PrivateRecordReq struct {
	FromId      string `json:"-"`
	TargetId    string `json:"targetId"`
	RecordCount int64  `json:"count,range=[1:100]"`
	Mid         string `json:"logId"`
}

type PrivateRecordResp struct {
	RecordCount int       `json:"record_count"`
	Records     []*Record `json:"records"`
}

type Record struct {
	Mid        string      `json:"logId"`
	Seq        string      `json:"msgId"`
	FromId     string      `json:"fromId"`
	TargetId   string      `json:"targetId"`
	MsgType    int32       `json:"msgType"`
	Content    interface{} `json:"content"`
	CreateTime uint64      `json:"createTime"`
}

type PushReq struct {
	File string `form:"file"`
}

type PushResp struct {
	Mid      int64  `json:"logId"`
	Datetime uint64 `json:"datetime"`
}

type LoginReq struct {
	ConnType int32 `json:"connType"`
}

type LoginResp struct {
	Address string `json:"address"`
}

type GroupInfo struct {
	Id         int64        `json:"id" form:"id"`
	IdStr      string       `json:"idStr"`
	MarkId     string       `json:"markId" form:"markId"`
	Name       string       `json:"name" form:"name"`
	PublicName string       `json:"publicName"`
	Avatar     string       `json:"avatar" form:"avatar"`
	Introduce  string       `json:"introduce" form:"introduce"`
	Owner      *GroupMember `json:"owner" form:"owner"`
	Person     *GroupMember `json:"person" form:"person"`
	MemberNum  int32        `json:"memberNum" form:"memberNum"`
	Maximum    int32        `json:"maximum" form:"maximum"`
	Status     int32        `json:"status" form:"status"`
	CreateTime int64        `json:"createTime" form:"createTime"`
	JoinType   int32        `json:"joinType" form:"joinType"`
	MuteType   int32        `json:"muteType" form:"muteType"`
	FriendType int32        `json:"friendType"`
	MuteNum    int32        `json:"muteNum"`
	AdminNum   int32        `json:"adminNum"`
	AESKey     string       `json:"key"`
	GroupType  int32        `json:"groupType"`
}

type GroupMember struct {
	MemberId       string `json:"memberId" form:"memberId"`
	MemberName     string `json:"memberName" form:"memberName"`
	MemberType     int32  `json:"memberType" form:"memberType"`
	MemberMuteTime int64  `json:"memberMuteTime"`
}

type ChangeOwnerReq struct {
	ID       int64  `json:"id,optional"`
	IdStr    string `json:"idStr,optional"`
	MemberId int64  `json:"memberId"`
}

type ChangeOwnerResp struct {
}

type CreateGroupReq struct {
	Name      string   `json:"name" form:"name"`
	Avatar    string   `json:"avatar" form:"avatar"`
	Introduce string   `json:"introduce" form:"introduce"`
	MemberIds []string `json:"memberIds" form:"memberIds"`
}

type CreateGroupResp struct {
	GroupInfo
	Members []*GroupMember `json:"members" form:"members"`
}

type GetGroupInfoReq struct {
	Id    int64  `json:"id" uri:"id"`
	IdStr string `json:"idStr"`
}

type GetGroupInfoResp struct {
	GroupInfo
	Members []*GroupMember `json:"members" form:"members"`
}

type GetGroupListReq struct {
	Id    int64  `json:"id" uri:"id"`
	IdStr string `json:"idStr"`
}

type GetGroupListResp struct {
	Groups []*GroupInfo `json:"groups"`
}

type GetGroupMemberInfoReq struct {
	Id       int64  `json:"id" uri:"id"`
	IdStr    string `json:"idStr"`
	MemberId string `json:"memberId" uri:"memberId" binding:"required"`
}

type GetGroupMemberInfoResp struct {
	GroupMember
}

type GetGroupMemberListReq struct {
	Id    int64  `json:"id" uri:"id"`
	IdStr string `json:"idStr"`
}

type GetGroupMemberListResp struct {
	Id      int64          `json:"id"`
	IdStr   string         `json:"idStr"`
	Members []*GroupMember `json:"members"`
}

type GetMuteListReq struct {
	Id    int64  `json:"id"`
	IdStr string `json:"idStr"`
}

type GetMuteListResp struct {
	Members []*GroupMember `json:"members"`
}

type GetGroupPubInfoReq struct {
	Id    int64  `json:"id"`
	IdStr string `json:"idStr"`
}

type GetGroupPubInfoResp struct {
	GroupInfo
}

type GroupDisbandReq struct {
	Id    int64  `json:"id"`
	IdStr string `json:"idStr"`
}

type GroupDisbandResp struct {
}

type GroupExitReq struct {
	Id    int64  `json:"id"`
	IdStr string `json:"idStr"`
}

type GroupExitResp struct {
}

type GroupRemoveReq struct {
	Id        int64    `json:"id"`
	IdStr     string   `json:"idStr"`
	MemberIds []string `json:"memberIds" binding:"required"`
}

type GroupRemoveResp struct {
	MemberNum int32    `json:"memberNum" form:"memberNum"`
	MemberIds []string `json:"memberIds"`
}

type InviteGroupMembersReq struct {
	Id           int64    `json:"id"`
	IdStr        string   `json:"idStr"`
	NewMemberIds []string `json:"newMemberIds" form:"newMemberIds" binding:"required"`
}

type InviteGroupMembersResp struct {
	Id        int64  `json:"id" form:"id" example:"123821199217135616"`
	IdStr     string `json:"idStr"`
	MemberNum int32  `json:"memberNum" form:"memberNum" example:"5"`
}

type JoinGroupReq struct {
	Id        int64  `json:"id"`
	IdStr     string `json:"idStr"`
	InviterId string `json:"inviterId"`
}

type JoinGroupResp struct {
	Id    int64  `json:"id"`
	IdStr string `json:"idStr"`
}

type SetAdminReq struct {
	Id         int64  `json:"id"`
	IdStr      string `json:"idStr"`
	MemberId   string `json:"memberId" binding:"required"`
	PersonId   string `json:"-"`
	MemberType int32  `json:"memberType" binding:"oneof=0 1"`
}

type SetAdminResp struct {
}

type UpdateGroupAvatarReq struct {
	Id     int64  `json:"id"`
	IdStr  string `json:"idStr"`
	Avatar string `json:"avatar"`
}

type UpdateGroupAvatarResp struct {
}

type UpdateGroupFriendTypeReq struct {
	Id         int64  `json:"id"`
	IdStr      string `json:"idStr"`
	FriendType int32  `json:"friendType"  binding:"oneof=0 1"`
}

type UpdateGroupFriendTypeResp struct {
}

type UpdateGroupJoinTypeReq struct {
	Id       int64  `json:"id"`
	IdStr    string `json:"idStr"`
	JoinType int32  `json:"joinType"  binding:"oneof=0 1 2"`
}

type UpdateGroupJoinTypeResp struct {
}

type UpdateGroupMemberMuteTimeReq struct {
	Id        int64    `json:"id"`
	IdStr     string   `json:"idStr"`
	MemberIds []string `json:"memberIds" binding:"required"`
	MuteTime  int64    `json:"muteTime"`
}

type UpdateGroupMemberMuteTimeResp struct {
	Members []*GroupMember `json:"members"`
}

type UpdateGroupMemberNameReq struct {
	Id         int64  `json:"id"`
	IdStr      string `json:"idStr"`
	MemberName string `json:"memberName"`
}

type UpdateGroupMemberNameResp struct {
}

type UpdateGroupMuteTypeReq struct {
	Id       int64  `json:"id"`
	IdStr    string `json:"idStr"`
	MuteType int32  `json:"muteType" binding:"oneof=0 1"`
}

type UpdateGroupMuteTypeResp struct {
}

type UpdateGroupNameReq struct {
	Id         int64  `json:"id"`
	IdStr      string `json:"idStr"`
	Name       string `json:"name"`
	PublicName string `json:"publicName"`
}

type UpdateGroupNameResp struct {
}
