syntax = "v2"

info(
	title: "group api declare"
	desc: ""
	author: "dld"
	email: "oofpgdld@gmail.com"
	version: "v1.0.0"
)
// goctl api format -dir .

type GroupInfo {
	Id         int64        `json:"id" form:"id"`
	IdStr      string       `json:"idStr"`
	MarkId     string       `json:"markId" form:"markId"`
	Name       string       `json:"name" form:"name"` //群成员可见的群名称（加密）
	PublicName string       `json:"publicName"`       //对外公开群名称
	Avatar     string       `json:"avatar" form:"avatar"`
	Introduce  string       `json:"introduce" form:"introduce"`
	Owner      *GroupMember `json:"owner" form:"owner"`
	Person     *GroupMember `json:"person" form:"person"` //个人群内的信息
	MemberNum  int32        `json:"memberNum" form:"memberNum"`
	Maximum    int32        `json:"maximum" form:"maximum"`
	Status     int32        `json:"status,options=0|1|2" form:"status"` //群状态:0->正常, 1->封禁, 2->解散
	CreateTime int64        `json:"createTime" form:"createTime"`
	JoinType   int32        `json:"joinType,options=0|1|2" form:"joinType"` //加群方式:0->无需审批, 1->仅群主和管理员邀请加群, 2->普通成员邀请需审批
	MuteType   int32        `json:"muteType" form:"muteType"`               //0->全员可发言, 1->全员禁言(除群主和管理员)
	FriendType int32        `json:"friendType"`                             //0->群内可加好友, 1->群内禁止加好友
	MuteNum    int32        `json:"muteNum"`                                //禁言人数
	AdminNum   int32        `json:"adminNum"`                               //管理员人数
	AESKey     string       `json:"key"`
	GroupType  int32        `json:"groupType"` //群类型：0->普通群, 1->企业群, 2->部门群
}

type GroupMember {
	MemberId       string `json:"memberId" form:"memberId"`
	MemberName     string `json:"memberName" form:"memberName"`
	MemberType     int32  `json:"memberType" form:"memberType"` //用户角色:0->群员, 1->管理员, 2->群主, 10->退群
	MemberMuteTime int64  `json:"memberMuteTime"`               // 禁言截止时间: 9223372036854775807->永久禁言
}

type ChangeOwnerReq {
	Id       int64  `json:"id,optional"`
	IdStr    string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	MemberId string `json:"memberId"`
}

type ChangeOwnerResp {}

type CreateGroupReq {
	Name      string   `json:"name" form:"name"`
	Avatar    string   `json:"avatar" form:"avatar"`
	Introduce string   `json:"introduce" form:"introduce"`
	MemberIds []string `json:"memberIds" form:"memberIds"`
}

type CreateGroupResp {
	GroupInfo
	Members []*GroupMember `json:"members" form:"members"`
}

type GetGroupInfoReq {
	Id    int64  `json:"id,optional"`
	IdStr string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
}

type GetGroupInfoResp {
	GroupInfo
	Members []*GroupMember `json:"members" form:"members"`
}

type GetGroupListReq {
}

type GetGroupListResp {
	Groups []*GroupInfo `json:"groups"`
}

type GetGroupMemberInfoReq {
	Id       int64  `json:"id,optional"`
	IdStr    string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	MemberId string `json:"memberId" uri:"memberId"`
}

type GetGroupMemberInfoResp {
	GroupMember
}

type GetGroupMemberListReq {
	Id    int64  `json:"id,optional"`
	IdStr string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
}

type GetGroupMemberListResp {
	Id      int64          `json:"id,optional"`
	IdStr   string         `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	Members []*GroupMember `json:"members"`
}

type GetMuteListReq {
	Id    int64  `json:"id,optional"`
	IdStr string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
}

type GetMuteListResp {
	Members []*GroupMember `json:"members"`
}

type GetGroupPubInfoReq {
	Id    int64  `json:"id,optional"`
	IdStr string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
}

type GetGroupPubInfoResp {
	GroupInfo
}

type GroupDisbandReq {
	Id    int64  `json:"id,optional"`
	IdStr string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
}

type GroupDisbandResp {
}

type GroupExitReq {
	Id    int64  `json:"id,optional"`
	IdStr string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
}

type GroupExitResp {
}

type GroupRemoveReq {
	Id        int64    `json:"id,optional"`
	IdStr     string   `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	MemberIds []string `json:"memberIds"`
}

type GroupRemoveResp {
	MemberNum int32    `json:"memberNum" form:"memberNum"`
	MemberIds []string `json:"memberIds"`
}

type InviteGroupMembersReq {
	Id           int64    `json:"id,optional"`
	IdStr        string   `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	NewMemberIds []string `json:"newMemberIds" form:"newMemberIds"`
}

type InviteGroupMembersResp {
	Id        int64  `json:"id,optional" form:"id,optional" example:"123821199217135616"`
	IdStr     string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	MemberNum int32  `json:"memberNum" form:"memberNum" example:"5"`
}

type JoinGroupReq {
	Id        int64  `json:"id"`
	IdStr     string `json:"idStr"`
	InviterId string `json:"inviterId"`
}

type JoinGroupResp {
	Id    int64  `json:"id"`
	IdStr string `json:"idStr"`
}

type SetAdminReq {
	Id         int64  `json:"id,optional"`
	IdStr      string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	MemberId   string `json:"memberId"`
	MemberType int32  `json:"memberType" enums:"0,1"` //用户角色:0->群员, 1->管理员
}

type SetAdminResp {
}

type UpdateGroupAvatarReq {
	Id     int64  `json:"id,optional"`
	IdStr  string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	Avatar string `json:"avatar"`
}

type UpdateGroupAvatarResp {
}

type UpdateGroupFriendTypeReq {
	Id         int64  `json:"id,optional"`
	IdStr      string `json:"idStr,optional"`         // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	FriendType int32  `json:"friendType,options=0|1"` //0->群内可加好友, 1->群内禁止加好友
}

type UpdateGroupFriendTypeResp {
}

type UpdateGroupJoinTypeReq {
	Id       int64  `json:"id,optional"`
	IdStr    string `json:"idStr,optional"`         // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	JoinType int32  `json:"joinType,options=0|1|2"` //加群方式:0->无需审批, 1->仅群主和管理员邀请加群, 2->普通成员邀请需审批
}

type UpdateGroupJoinTypeResp {
}

type UpdateGroupMemberMuteTimeReq {
	Id        int64    `json:"id,optional"`
	IdStr     string   `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	MemberIds []string `json:"memberIds"`
	MuteTime  int64    `json:"muteTime"` //禁言截止时间: 0->解除禁言, 9223372036854775807->永久禁言
}

type UpdateGroupMemberMuteTimeResp {
	Members []*GroupMember `json:"members"`
}

type UpdateGroupMemberNameReq {
	Id         int64  `json:"id,optional"`
	IdStr      string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	MemberName string `json:"memberName"`
}

type UpdateGroupMemberNameResp {
}

type UpdateGroupMuteTypeReq {
	Id       int64  `json:"id,optional"`
	IdStr    string `json:"idStr,optional"`       // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	MuteType int32  `json:"muteType,options=0|1"` //0->全员可发言, 1->全员禁言(除群主和管理员)
}

type UpdateGroupMuteTypeResp {
}

type UpdateGroupNameReq {
	Id         int64  `json:"id,optional"`
	IdStr      string `json:"idStr,optional"` // 群 ID, 如果同时填了 idStr, 则优先选择 idStr
	Name       string `json:"name"`
	PublicName string `json:"publicName"`
}

type UpdateGroupNameResp {
}

type CreateJoinGroupApplyReq {
	Id        string `json:"id,omitempty"`
	ApplyNote string `json:"applyNote,omitempty"`
}

type CreateJoinGroupApplyResp {
}

@server(
	group: group
	middleware: AppAuthMiddleware
)
service chat-api {
	@doc "移交群主"
	@handler ChangeOwner
	post /group/app/change-owner (ChangeOwnerReq) returns (ChangeOwnerResp)
	
	@doc "创建群"
	@handler CreateGroup
	post /group/app/create-group (CreateGroupReq) returns (CreateGroupResp)
	
	@doc "获取群信息"
	@handler GetGroupInfo
	post /group/app/group-info (GetGroupInfoReq) returns (GetGroupInfoResp)
	
	@doc "获取入群列表"
	@handler GetGroupList
	post /group/app/group-list (GetGroupListReq) returns (GetGroupListResp)
	
	@doc "获取群成员信息"
	@handler GetGroupMemberInfo
	post /group/app/group-member-info (GetGroupMemberInfoReq) returns (GetGroupMemberInfoResp)
	
	@doc "获取群成员列表"
	@handler GetGroupMemberList
	post /group/app/group-member-list (GetGroupMemberListReq) returns (GetGroupMemberListResp)
	
	@doc "获取群禁言列表"
	@handler GetMuteList
	post /group/app/mute-list (GetMuteListReq) returns (GetMuteListResp)
	
	@doc "获取群公开信息"
	@handler GetGroupPubInfo
	post /group/app/group-pub-info (GetGroupPubInfoReq) returns (GetGroupPubInfoResp)
	
	@doc "解散群"
	@handler GroupDisband
	post /group/app/group-disband (GroupDisbandReq) returns (GroupDisbandResp)
	
	@doc "退出群"
	@handler GroupExit
	post /group/app/group-exit (GroupExitReq) returns (GroupExitResp)
	
	@doc "将成员移除群"
	@handler GroupRemove
	post /group/app/group-remove (GroupRemoveReq) returns (GroupRemoveResp)
	
	@doc "邀请新成员"
	@handler InviteGroupMembers
	post /group/app/invite-group-members (InviteGroupMembersReq) returns (InviteGroupMembersResp)
	
	@doc "主动加群"
	@handler JoinGroup
	post /group/app/join-group (JoinGroupReq) returns (JoinGroupResp)
	
	@doc "设置群管理员"
	@handler SetAdmin
	post /group/app/member/type (SetAdminReq) returns (SetAdminResp)
	
	@doc "更新群头像"
	@handler UpdateGroupAvatar
	post /group/app/avatar (UpdateGroupAvatarReq) returns (UpdateGroupAvatarResp)
	
	@doc "更新群加好友权限"
	@handler UpdateGroupFriendType
	post /group/app/friendType (UpdateGroupFriendTypeReq) returns (UpdateGroupFriendTypeResp)
	
	@doc "更新群入群权限"
	@handler UpdateGroupJoinType
	post /group/app/joinType (UpdateGroupJoinTypeReq) returns (UpdateGroupJoinTypeResp)
	
	@doc "禁言或解禁成员"
	@handler UpdateGroupMemberMuteTime
	post /group/app/member/muteTime (UpdateGroupMemberMuteTimeReq) returns (UpdateGroupMemberMuteTimeResp)
	
	@doc "更新群成员名称"
	@handler UpdateGroupMemberName
	post /group/app/member/name (UpdateGroupMemberNameReq) returns (UpdateGroupMemberNameResp)
	
	@doc "更新群禁言类型"
	@handler UpdateGroupMuteType
	post /group/app/muteType (UpdateGroupMuteTypeReq) returns (UpdateGroupMuteTypeResp)
	
	@doc "更新群名"
	@handler UpdateGroupName
	post /group/app/name (UpdateGroupNameReq) returns (UpdateGroupNameResp)
}