syntax = "v2"

info(
	title: "call api declare"
	desc: ""
	author: "dld"
	email: "oofpgdld@gmail.com"
	version: "v1.0.0"
)
// goctl api format -dir .

type StartCallReq {
	GroupId  string   `json:"groupId"`
	Invitees []string `json:"invitees"`
	RTCType  int32    `json:"RTCType,options=1|2"` //1->音频, 2->视频
}

type StartCallResp {
	TraceId    int64    `json:"traceId"`
	TraceIdStr string   `json:"traceIdStr"`
	RTCType    int32    `json:"RTCType"` //1->音频, 2->视频
	Invitees   []string `json:"invitees"`
	Caller     string   `json:"caller"`
	CreateTime int64    `json:"createTime"`
	Timeout    int32    `json:"timeout"`
	Deadline   int64    `json:"deadline"`
	GroupId    string   `json:"groupId"` // 0->私聊, ^0->群id
}

type ReplyBusyReq {
	TraceId    int64  `json:"traceId"`
	TraceIdStr string `json:"traceIdStr,optional"` // 如果同时填了 tracedIdStr, 则优先选择 traceIdStr
}

type ReplyBusyResp {}

type CheckCallReq {
	TraceId    int64  `json:"traceId"`
	TraceIdStr string `json:"traceIdStr,optional"` // 如果同时填了 tracedIdStr, 则优先选择 traceIdStr
}

type CheckCallResp {
	TraceId    int64    `json:"traceId"`
	TraceIdStr string   `json:"traceIdStr"`
	RTCType    int32    `json:"RTCType"` //1->音频, 2->视频
	Invitees   []string `json:"invitees"`
	Caller     string   `json:"caller"`
	CreateTime int64    `json:"createTime"`
	Timeout    int32    `json:"timeout"`
	Deadline   int64    `json:"deadline"`
	GroupId    string   `json:"groupId"` // 0->私聊, ^0->群id
}

type HandleCallReq {
	Answer     bool   `json:"answer"`
	TraceId    int64  `json:"traceId"`
	TraceIdStr string `json:"traceIdStr,optional"` // 如果同时填了 tracedIdStr, 则优先选择 traceIdStr
}

type HandleCallResp {
	RoomId        int32  `json:"roomId"`
	UserSig       string `json:"userSig"`
	PrivateMapKey string `json:"privateMapKey"`
	SDKAppId      int32  `json:"sdkAppId"`
}

@server(
	group: call
	middleware: AppAuthMiddleware
)

service chat-api {
	@doc "发起音视频通话"
	@handler StartCall
	post /app/start-call (StartCallReq) returns (StartCallResp)
	
	@doc "通话响应-繁忙"
	@handler ReplyBusy
	post /app/reply-busy (ReplyBusyReq) returns (ReplyBusyResp)
	
	@doc "检查通话"
	@handler CheckCall
	post /app/check-call (CheckCallReq) returns (CheckCallResp)
	
	@doc "处理通话"
	@handler HandleCall
	post /app/handle-call (HandleCallReq) returns (HandleCallResp)
}