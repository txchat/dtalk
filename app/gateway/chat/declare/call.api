syntax = "v2"

info(
    title: "call api declare"
    desc: ""
    author: "dld"
    email: "oofpgdld@gmail.com"
    version: "v1.0.0"
)
// goctl api format -dir .

type StartCallReq {
	GroupId  string   `json:"groupId"`
	Invitees []string `json:"invitees"`
	RTCType  int32    `json:"RTCType,options=1|2"`
}

type StartCallResp {
	TraceId    int64    `json:"traceId"`
    TraceIdStr string   `json:"traceIdStr"`
    RTCType    int32    `json:"RTCType"`
    Invitees   []string `json:"invitees"`
    Caller     string   `json:"caller"`
    CreateTime int64    `json:"createTime"`
    Timeout    int32    `json:"timeout"`
    Deadline   int64    `json:"deadline"`
    GroupId string      `json:"groupId"` // 0表示私聊, 其他表示群聊
}

type ReplyBusyReq {
	TraceId  int64  `json:"traceId"`
    TraceIdStr string `json:"traceIdStr,optional"`   // 如果同时填了 tracedIdStr, 则优先选择 traceIdStr
}

type ReplyBusyResp {}

type CheckCallReq {
	TraceId  int64  `json:"traceId"`
    TraceIdStr string `json:"traceIdStr,optional"`   // 如果同时填了 tracedIdStr, 则优先选择 traceIdStr
}

type CheckCallResp {
    TraceId    int64    `json:"traceId"`
	TraceIdStr string   `json:"traceIdStr"`
	RTCType    int32    `json:"RTCType"`
	Invitees   []string `json:"invitees"`
	Caller     string   `json:"caller"`
	CreateTime int64    `json:"createTime"`
	Timeout    int32    `json:"timeout"`
	Deadline   int64    `json:"deadline"`
	GroupId    string   `json:"groupId"`    // 0表示私聊, 其他表示群聊
}

type HandleCallReq {
	Answer   bool     `json:"answer"`
    TraceId  int64    `json:"traceId"`
    TraceIdStr string `json:"traceIdStr,optional"`   // 如果同时填了 tracedIdStr, 则优先选择 traceIdStr
}

type HandleCallResp {
    RoomId        int32  `json:"roomId"`
    UserSig       string `json:"userSig"`
    PrivateMapKey string `json:"privateMapKey"`
    SDKAppId      int32  `json:"sdkAppId"`
}

@server(
    group: call
    middleware: AppAuthMiddleware
)
service chat-api {
    @handler StartCall
    post /app/start-call (StartCallReq) returns (StartCallResp)
    @handler ReplyBusy
    post /app/reply-busy (ReplyBusyReq) returns (ReplyBusyResp)
    @handler CheckCall
    post /app/check-call (CheckCallReq) returns (CheckCallResp)
    @handler HandleCall
    post /app/handle-call (HandleCallReq) returns (HandleCallResp)
}