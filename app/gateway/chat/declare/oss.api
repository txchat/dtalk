syntax = "v2"

info(
	title: "oss api declare"
	desc: ""
	author: "dld"
	email: "oofpgdld@gmail.com"
	version: "v1.0.0"
)
// goctl api format -dir .

type Credentials {
	AccessKeySecret string `json:"AccessKeySecret" xml:"AccessKeySecret"`
	Expiration      string `json:"Expiration" xml:"Expiration"`
	AccessKeyId     string `json:"AccessKeyId" xml:"AccessKeyId"`
	SecurityToken   string `json:"SecurityToken" xml:"SecurityToken"`
}

type AssumedRoleUser {
	AssumedRoleId string `json:"AssumedRoleId" xml:"AssumedRoleId"`
	Arn           string `json:"Arn" xml:"Arn"`
}

type GetTokenReq {
}

type GetTokenResp {
	RequestId       string          `json:"RequestId" xml:"RequestId"`
	Credentials     Credentials     `json:"Credentials" xml:"Credentials"`
	AssumedRoleUser AssumedRoleUser `json:"AssumedRoleUser" xml:"AssumedRoleUser"`
}

type GetHWCloudTokenReq {
}

type GetHWCloudTokenResp {
	RequestId       string          `json:"RequestId" xml:"RequestId"`
	Credentials     Credentials     `json:"Credentials" xml:"Credentials"`
	AssumedRoleUser AssumedRoleUser `json:"AssumedRoleUser" xml:"AssumedRoleUser"`
}

type OssBase {
	AppId   string `json:"appId" form:"appId"`
	OssType string `json:"ossType,optional,options=huaweiyun|aliyun|minio" form:"ossType,optional,options=huaweiyun|aliyun|minio"` //云服务商（选填）: 自动选择默认服务商, 或者指定
}

type Part {
	ETag       string `json:"ETag" form:"ETag"`                                             // 段数据的MD5值
	PartNumber int32  `json:"partNumber,range=[1:10000]" form:"partNumber,range=[1:10000]"` //分段序号, 范围是1~10000
}

type UploadReq {
	OssBase
	Key string `json:"key" form:"key"` // 文件名(包含路径)
}

type UploadResp {
	Url string `json:"url"`
	Uri string `json:"uri"`
}

type InitMultiUploadReq {
	OssBase
	Key string `json:"key" form:"key"` // 文件名(包含路径)
}

type InitMultiUploadResp {
	UploadId string `json:"uploadId"` // 分段上传任务全局唯一标识
	Key      string `json:"key"`      // 文件名(包含路径)
}

type UploadPartReq {
	OssBase

	Key        string `json:"key" form:"key"`                                               // 文件名(包含路径)
	UploadId   string `json:"uploadId" form:"uploadId"`                                     // 分段上传任务全局唯一标识
	PartNumber int32  `json:"partNumber,range=[1:10000]" form:"partNumber,range=[1:10000]"` // 分段序号, 范围是1~10000
}

type UploadPartResp {
	Part
	UploadId string `json:"uploadId"` // 分段上传任务全局唯一标识
	Key      string `json:"key"`      // 文件名(包含路径)
}

type CompleteMultiUploadReq {
	OssBase
	Key      string `json:"key" form:"key"`           // 文件名(包含路径)
	UploadId string `json:"uploadId" form:"uploadId"` // 分段上传任务全局唯一标识
	Parts    []Part `json:"parts"`
}

type CompleteMultiUploadResp {
	Url string `json:"url"`
	Uri string `json:"uri"`
}

type AbortMultiUploadReq {
	OssBase
	Key      string `json:"key" form:"key"`           // 文件名(包含路径)
	UploadId string `json:"uploadId" form:"uploadId"` // 分段上传任务全局唯一标识
}

type AbortMultiUploadResp {
}

type GetHostReq {
	OssBase
}

type GetHostResp {
	Host string `json:"host"`
}

@server(
	group: oss
	middleware: AppAuthMiddleware
)
service chat-api {
	@doc "获取token"
	@handler GetToken
	post /oss/get-token (GetTokenReq) returns (GetTokenResp)
	
	@doc "获取华为云token"
	@handler GetHWCloudToken
	post /oss/get-huaweiyun-token (GetHWCloudTokenReq) returns (GetHWCloudTokenResp)
	
	@doc "上传"
	@handler Upload
	post /oss/upload (UploadReq) returns (UploadResp)
	
	@doc "初始化分段上传"
	@handler InitMultiUpload
	post /oss/init-multipart-upload (InitMultiUploadReq) returns (InitMultiUploadResp)
	
	@doc "上传某一段"
	@handler UploadPart
	post /oss/upload-part (UploadPartReq) returns (UploadPartResp)
	
	@doc "完成分段上传"
	@handler CompleteMultiUpload
	post /oss/complete-multipart-upload (CompleteMultiUploadReq) returns (CompleteMultiUploadResp)
	
	@doc "终止分段上传"
	@handler AbortMultiUpload
	post /oss/abort-multipart-upload (AbortMultiUploadReq) returns (AbortMultiUploadResp)
	
	@doc "获取主机地址"
	@handler GetHost
	post /oss/get-host (GetHostReq) returns (GetHostResp)
}