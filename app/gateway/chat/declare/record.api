syntax = "v2"

info(
	title: "record api declare"
	desc: ""
	author: "dld"
	email: "oofpgdld@gmail.com"
	version: "v1.0.0"
)
// goctl api format -dir .

type RevokeReq {
	Type int   `json:"type,optional,options=0|1"` //撤回类型: 0->私聊, 1->群聊
	Mid  int64 `json:"logId"`
}

type RevokeResp {
}

type FocusReq {
	Type int   `json:"type,optional,options=0|1"` //关注类型: 0->私聊, 1->群聊
	Mid  int64 `json:"logId"`
}

type FocusResp {
}

type GetSeqRangeReq {
}

type GetSeqRangeResp {
   	MaxSeq int64 `json:"maxSeq"`
   	MinSeq int64 `json:"minSeq"`
}

type PullReq {
	SeqList []int64 `json:"seqList"`
}

type PullResp {
    Records [][]byte `json:"records"`
}

type PullPrivateRoamingReq {
	Session string `json:"session"`
	Size int32 `json:"size"`
}

type PullPrivateRoamingResp {
    Records [][]byte `json:"records"`
}


type SyncReq {
	MaxCount int64 `json:"count,range=[1:1000]"` // 消息数量
	StartMid int64 `json:"start,optional"`       // 消息 ID
}

type SyncResp {
	RecordCount int      `json:"record_count"` // 聊天记录数量
	Records     []string `json:"records"`      // 聊天记录 base64 encoding
}

type PrivateRecordReq {
	FromId      string `json:"-"`
	TargetId    string `json:"targetId"`
	RecordCount int64  `json:"count,range=[1:100]"`
	Mid         string `json:"logId"`
}

type PrivateRecordResp {
	RecordCount int       `json:"record_count"` // 聊天记录数量
	Records     []*Record `json:"records"`      // 聊天记录
}

type Record {
	Mid        string      `json:"logId"`      // log id
	Seq        string      `json:"msgId"`      // msg id (uuid)
	FromId     string      `json:"fromId"`     // 发送者 id
	TargetId   string      `json:"targetId"`   // 接收者 id
	MsgType    int32       `json:"msgType"`    // 消息类型
	Content    interface{} `json:"content"`    // 消息内容
	CreateTime uint64      `json:"createTime"` // 消息发送时间
}

type PushReq {
	File string `form:"file"`
}

type PushResp {
	Mid      int64  `json:"logId"`
	Datetime uint64 `json:"datetime"`
}

@server(
	group: record
	middleware: AppAuthMiddleware
)
service chat-api {
	@doc "撤回消息"
	@handler Revoke
	post /app/record/revoke (RevokeReq) returns (RevokeResp)
	
	@doc "关注消息"
	@handler Focus
	post /app/record/focus (FocusReq) returns (FocusResp)

    @doc "获取消息序列范围"
	@handler GetSeqRange
	post /app/record/seq-range (GetSeqRangeReq) returns (GetSeqRangeResp)

    @doc "拉取同步消息"
	@handler Pull
	post /app/record/pull (PullReq) returns (PullResp)

	@doc "拉取私聊漫游消息"
	@handler PullPrivateRoaming
	post /app/record/private-roaming (PullPrivateRoamingReq) returns (PullPrivateRoamingResp)

	@doc "拉取群聊漫游消息"
	@handler PullGroupRoaming
	post /app/record/group-roaming (PullGroupRoamingReq) returns (PullGroupRoamingResp)

	@doc "获取私聊消息"
	@handler PrivateRecord
	post /app/record/pri-chat-record (PrivateRecordReq) returns (PrivateRecordResp)
	
	@doc "发送消息"
	@handler Push
	post /record/push (PushReq) returns (PushResp)
	
	@doc "发送消息"
	@handler Push2
	post /record/push2 (PushReq) returns (PushResp)
}