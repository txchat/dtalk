// protoc -I=. -I=$GOPATH/src --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: github.com/txchat/dtalk/internal/proto/record.proto

package record

import (
	reflect "reflect"
	sync "sync"

	chat "github.com/txchat/dtalk/api/proto/chat"
	message "github.com/txchat/dtalk/api/proto/message"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// record --> mq
type PushMsgMQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId   string          `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	From    string          `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Target  string          `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Channel message.Channel `protobuf:"varint,4,opt,name=channel,proto3,enum=dtalk.api.proto.Channel" json:"channel,omitempty"`
	Msg     []byte          `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PushMsgMQ) Reset() {
	*x = PushMsgMQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_txchat_dtalk_internal_proto_record_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMsgMQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMsgMQ) ProtoMessage() {}

func (x *PushMsgMQ) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_txchat_dtalk_internal_proto_record_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMsgMQ.ProtoReflect.Descriptor instead.
func (*PushMsgMQ) Descriptor() ([]byte, []int) {
	return file_github_com_txchat_dtalk_internal_proto_record_proto_rawDescGZIP(), []int{0}
}

func (x *PushMsgMQ) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *PushMsgMQ) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *PushMsgMQ) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *PushMsgMQ) GetChannel() message.Channel {
	if x != nil {
		return x.Channel
	}
	return message.Channel(0)
}

func (x *PushMsgMQ) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// record --> mq
type StoreMsgMQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string     `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	From   string     `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Target []string   `protobuf:"bytes,3,rep,name=target,proto3" json:"target,omitempty"`
	Chat   *chat.Chat `protobuf:"bytes,4,opt,name=chat,proto3" json:"chat,omitempty"`
}

func (x *StoreMsgMQ) Reset() {
	*x = StoreMsgMQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_txchat_dtalk_internal_proto_record_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreMsgMQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreMsgMQ) ProtoMessage() {}

func (x *StoreMsgMQ) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_txchat_dtalk_internal_proto_record_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreMsgMQ.ProtoReflect.Descriptor instead.
func (*StoreMsgMQ) Descriptor() ([]byte, []int) {
	return file_github_com_txchat_dtalk_internal_proto_record_proto_rawDescGZIP(), []int{1}
}

func (x *StoreMsgMQ) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *StoreMsgMQ) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *StoreMsgMQ) GetTarget() []string {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *StoreMsgMQ) GetChat() *chat.Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

var File_github_com_txchat_dtalk_internal_proto_record_proto protoreflect.FileDescriptor

var file_github_com_txchat_dtalk_internal_proto_record_proto_rawDesc = []byte{
	0x0a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x78, 0x63,
	0x68, 0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x1a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x78, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x78,
	0x63, 0x68, 0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x93, 0x01, 0x0a, 0x09, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x4d, 0x51,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x79, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x4d, 0x73, 0x67, 0x4d, 0x51, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x04, 0x63,
	0x68, 0x61, 0x74, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x78, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_txchat_dtalk_internal_proto_record_proto_rawDescOnce sync.Once
	file_github_com_txchat_dtalk_internal_proto_record_proto_rawDescData = file_github_com_txchat_dtalk_internal_proto_record_proto_rawDesc
)

func file_github_com_txchat_dtalk_internal_proto_record_proto_rawDescGZIP() []byte {
	file_github_com_txchat_dtalk_internal_proto_record_proto_rawDescOnce.Do(func() {
		file_github_com_txchat_dtalk_internal_proto_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_txchat_dtalk_internal_proto_record_proto_rawDescData)
	})
	return file_github_com_txchat_dtalk_internal_proto_record_proto_rawDescData
}

var file_github_com_txchat_dtalk_internal_proto_record_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_github_com_txchat_dtalk_internal_proto_record_proto_goTypes = []interface{}{
	(*PushMsgMQ)(nil),    // 0: dtalk.record.PushMsgMQ
	(*StoreMsgMQ)(nil),   // 1: dtalk.record.StoreMsgMQ
	(message.Channel)(0), // 2: dtalk.api.proto.Channel
	(*chat.Chat)(nil),    // 3: dtalk.api.proto.Chat
}
var file_github_com_txchat_dtalk_internal_proto_record_proto_depIdxs = []int32{
	2, // 0: dtalk.record.PushMsgMQ.channel:type_name -> dtalk.api.proto.Channel
	3, // 1: dtalk.record.StoreMsgMQ.chat:type_name -> dtalk.api.proto.Chat
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_github_com_txchat_dtalk_internal_proto_record_proto_init() }
func file_github_com_txchat_dtalk_internal_proto_record_proto_init() {
	if File_github_com_txchat_dtalk_internal_proto_record_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_txchat_dtalk_internal_proto_record_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMsgMQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_txchat_dtalk_internal_proto_record_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreMsgMQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_txchat_dtalk_internal_proto_record_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_txchat_dtalk_internal_proto_record_proto_goTypes,
		DependencyIndexes: file_github_com_txchat_dtalk_internal_proto_record_proto_depIdxs,
		MessageInfos:      file_github_com_txchat_dtalk_internal_proto_record_proto_msgTypes,
	}.Build()
	File_github_com_txchat_dtalk_internal_proto_record_proto = out.File
	file_github_com_txchat_dtalk_internal_proto_record_proto_rawDesc = nil
	file_github_com_txchat_dtalk_internal_proto_record_proto_goTypes = nil
	file_github_com_txchat_dtalk_internal_proto_record_proto_depIdxs = nil
}
