// protoc -I=. -I=$GOPATH/src --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: github.com/txchat/dtalk/internal/proto/offline.proto

package offline

import (
	reflect "reflect"
	sync "sync"

	auth "github.com/txchat/dtalk/api/proto/auth"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// record --> mq
type OffPushMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId       string      `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Device      auth.Device `protobuf:"varint,2,opt,name=device,proto3,enum=dtalk.api.proto.Device" json:"device,omitempty"`
	Title       string      `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content     string      `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Token       string      `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	ChannelType int32       `protobuf:"varint,6,opt,name=channelType,proto3" json:"channelType,omitempty"`
	Target      string      `protobuf:"bytes,7,opt,name=target,proto3" json:"target,omitempty"`
	Timeout     int64       `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *OffPushMsg) Reset() {
	*x = OffPushMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_txchat_dtalk_internal_proto_offline_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OffPushMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffPushMsg) ProtoMessage() {}

func (x *OffPushMsg) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_txchat_dtalk_internal_proto_offline_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffPushMsg.ProtoReflect.Descriptor instead.
func (*OffPushMsg) Descriptor() ([]byte, []int) {
	return file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDescGZIP(), []int{0}
}

func (x *OffPushMsg) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *OffPushMsg) GetDevice() auth.Device {
	if x != nil {
		return x.Device
	}
	return auth.Device(0)
}

func (x *OffPushMsg) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OffPushMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *OffPushMsg) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *OffPushMsg) GetChannelType() int32 {
	if x != nil {
		return x.ChannelType
	}
	return 0
}

func (x *OffPushMsg) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *OffPushMsg) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

var File_github_com_txchat_dtalk_internal_proto_offline_proto protoreflect.FileDescriptor

var file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDesc = []byte{
	0x0a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x78, 0x63,
	0x68, 0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x6f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x78, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xed, 0x01, 0x0a, 0x0a, 0x4f, 0x66, 0x66, 0x50, 0x75, 0x73, 0x68, 0x4d,
	0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x78, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x3b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDescOnce sync.Once
	file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDescData = file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDesc
)

func file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDescGZIP() []byte {
	file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDescOnce.Do(func() {
		file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDescData)
	})
	return file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDescData
}

var file_github_com_txchat_dtalk_internal_proto_offline_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_txchat_dtalk_internal_proto_offline_proto_goTypes = []interface{}{
	(*OffPushMsg)(nil), // 0: dtalk.offline.OffPushMsg
	(auth.Device)(0),   // 1: dtalk.api.proto.Device
}
var file_github_com_txchat_dtalk_internal_proto_offline_proto_depIdxs = []int32{
	1, // 0: dtalk.offline.OffPushMsg.device:type_name -> dtalk.api.proto.Device
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_github_com_txchat_dtalk_internal_proto_offline_proto_init() }
func file_github_com_txchat_dtalk_internal_proto_offline_proto_init() {
	if File_github_com_txchat_dtalk_internal_proto_offline_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_txchat_dtalk_internal_proto_offline_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OffPushMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_txchat_dtalk_internal_proto_offline_proto_goTypes,
		DependencyIndexes: file_github_com_txchat_dtalk_internal_proto_offline_proto_depIdxs,
		MessageInfos:      file_github_com_txchat_dtalk_internal_proto_offline_proto_msgTypes,
	}.Build()
	File_github_com_txchat_dtalk_internal_proto_offline_proto = out.File
	file_github_com_txchat_dtalk_internal_proto_offline_proto_rawDesc = nil
	file_github_com_txchat_dtalk_internal_proto_offline_proto_goTypes = nil
	file_github_com_txchat_dtalk_internal_proto_offline_proto_depIdxs = nil
}
