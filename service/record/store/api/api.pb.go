// protoc -I=. -I=$GOPATH/src --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api.proto

package store

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/txchat/imparse/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DelRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tp  proto.Channel `protobuf:"varint,1,opt,name=tp,proto3,enum=imparse.v1.Channel" json:"tp,omitempty"`
	Mid int64         `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *DelRecordReq) Reset() {
	*x = DelRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRecordReq) ProtoMessage() {}

func (x *DelRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRecordReq.ProtoReflect.Descriptor instead.
func (*DelRecordReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *DelRecordReq) GetTp() proto.Channel {
	if x != nil {
		return x.Tp
	}
	return proto.Channel(0)
}

func (x *DelRecordReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type DelRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelRecordReply) Reset() {
	*x = DelRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRecordReply) ProtoMessage() {}

func (x *DelRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRecordReply.ProtoReflect.Descriptor instead.
func (*DelRecordReply) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

type GetRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tp  proto.Channel `protobuf:"varint,1,opt,name=tp,proto3,enum=imparse.v1.Channel" json:"tp,omitempty"`
	Mid int64         `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *GetRecordReq) Reset() {
	*x = GetRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordReq) ProtoMessage() {}

func (x *GetRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordReq.ProtoReflect.Descriptor instead.
func (*GetRecordReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetRecordReq) GetTp() proto.Channel {
	if x != nil {
		return x.Tp
	}
	return proto.Channel(0)
}

func (x *GetRecordReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type GetRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid        string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Seq        string `protobuf:"bytes,2,opt,name=seq,proto3" json:"seq,omitempty"`
	SenderId   string `protobuf:"bytes,3,opt,name=senderId,proto3" json:"senderId,omitempty"`
	ReceiverId string `protobuf:"bytes,4,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	MsgType    uint32 `protobuf:"varint,5,opt,name=msgType,proto3" json:"msgType,omitempty"`
	Content    string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	CreateTime uint64 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Source     string `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *GetRecordReply) Reset() {
	*x = GetRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordReply) ProtoMessage() {}

func (x *GetRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordReply.ProtoReflect.Descriptor instead.
func (*GetRecordReply) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetRecordReply) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *GetRecordReply) GetSeq() string {
	if x != nil {
		return x.Seq
	}
	return ""
}

func (x *GetRecordReply) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *GetRecordReply) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *GetRecordReply) GetMsgType() uint32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *GetRecordReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetRecordReply) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GetRecordReply) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type GetRecordsAfterMidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tp     proto.Channel `protobuf:"varint,1,opt,name=tp,proto3,enum=imparse.v1.Channel" json:"tp,omitempty"`
	Mid    int64         `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	From   string        `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Target string        `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Count  int64         `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetRecordsAfterMidReq) Reset() {
	*x = GetRecordsAfterMidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordsAfterMidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordsAfterMidReq) ProtoMessage() {}

func (x *GetRecordsAfterMidReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordsAfterMidReq.ProtoReflect.Descriptor instead.
func (*GetRecordsAfterMidReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetRecordsAfterMidReq) GetTp() proto.Channel {
	if x != nil {
		return x.Tp
	}
	return proto.Channel(0)
}

func (x *GetRecordsAfterMidReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetRecordsAfterMidReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetRecordsAfterMidReq) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *GetRecordsAfterMidReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetRecordsAfterMidReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*GetRecordReply `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *GetRecordsAfterMidReply) Reset() {
	*x = GetRecordsAfterMidReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordsAfterMidReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordsAfterMidReply) ProtoMessage() {}

func (x *GetRecordsAfterMidReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordsAfterMidReply.ProtoReflect.Descriptor instead.
func (*GetRecordsAfterMidReply) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetRecordsAfterMidReply) GetRecords() []*GetRecordReply {
	if x != nil {
		return x.Records
	}
	return nil
}

type GetSyncRecordsAfterMidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid   int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Uid   string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Count int64  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetSyncRecordsAfterMidReq) Reset() {
	*x = GetSyncRecordsAfterMidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncRecordsAfterMidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncRecordsAfterMidReq) ProtoMessage() {}

func (x *GetSyncRecordsAfterMidReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncRecordsAfterMidReq.ProtoReflect.Descriptor instead.
func (*GetSyncRecordsAfterMidReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetSyncRecordsAfterMidReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetSyncRecordsAfterMidReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetSyncRecordsAfterMidReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetSyncRecordsAfterMidReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records [][]byte `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *GetSyncRecordsAfterMidReply) Reset() {
	*x = GetSyncRecordsAfterMidReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncRecordsAfterMidReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncRecordsAfterMidReply) ProtoMessage() {}

func (x *GetSyncRecordsAfterMidReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncRecordsAfterMidReply.ProtoReflect.Descriptor instead.
func (*GetSyncRecordsAfterMidReply) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetSyncRecordsAfterMidReply) GetRecords() [][]byte {
	if x != nil {
		return x.Records
	}
	return nil
}

type AddRecordFocusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Mid  int64  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Time uint64 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AddRecordFocusReq) Reset() {
	*x = AddRecordFocusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordFocusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordFocusReq) ProtoMessage() {}

func (x *AddRecordFocusReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordFocusReq.ProtoReflect.Descriptor instead.
func (*AddRecordFocusReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *AddRecordFocusReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AddRecordFocusReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *AddRecordFocusReq) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type AddRecordFocusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentNum int32 `protobuf:"varint,1,opt,name=currentNum,proto3" json:"currentNum,omitempty"`
}

func (x *AddRecordFocusReply) Reset() {
	*x = AddRecordFocusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordFocusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordFocusReply) ProtoMessage() {}

func (x *AddRecordFocusReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordFocusReply.ProtoReflect.Descriptor instead.
func (*AddRecordFocusReply) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *AddRecordFocusReply) GetCurrentNum() int32 {
	if x != nil {
		return x.CurrentNum
	}
	return 0
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x64, 0x74, 0x61,
	0x6c, 0x6b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x28, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x33, 0x33, 0x2e, 0x63, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x69, 0x6d, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x02, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x69, 0x6d, 0x70, 0x61, 0x72, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x02, 0x74, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x45, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x02, 0x74,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x74, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d,
	0x69, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x90, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x02, 0x74,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x74, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x35, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x37, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x46, 0x6f, 0x63, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x32, 0xb1, 0x03, 0x0a, 0x05, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x43, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x19, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x64,
	0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x19, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x6f, 0x63, 0x75, 0x73,
	0x12, 0x1e, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x5e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x12, 0x22, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x64,
	0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x12, 0x26, 0x2e, 0x64,
	0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x2e,
	0x5a, 0x2c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x33, 0x33, 0x2e, 0x63, 0x6e, 0x2f, 0x63,
	0x68, 0x61, 0x74, 0x2f, 0x64, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_proto_goTypes = []interface{}{
	(*DelRecordReq)(nil),                // 0: dtalk.store.DelRecordReq
	(*DelRecordReply)(nil),              // 1: dtalk.store.DelRecordReply
	(*GetRecordReq)(nil),                // 2: dtalk.store.GetRecordReq
	(*GetRecordReply)(nil),              // 3: dtalk.store.GetRecordReply
	(*GetRecordsAfterMidReq)(nil),       // 4: dtalk.store.GetRecordsAfterMidReq
	(*GetRecordsAfterMidReply)(nil),     // 5: dtalk.store.GetRecordsAfterMidReply
	(*GetSyncRecordsAfterMidReq)(nil),   // 6: dtalk.store.GetSyncRecordsAfterMidReq
	(*GetSyncRecordsAfterMidReply)(nil), // 7: dtalk.store.GetSyncRecordsAfterMidReply
	(*AddRecordFocusReq)(nil),           // 8: dtalk.store.AddRecordFocusReq
	(*AddRecordFocusReply)(nil),         // 9: dtalk.store.AddRecordFocusReply
	(proto.Channel)(0),                  // 10: imparse.v1.Channel
}
var file_api_proto_depIdxs = []int32{
	10, // 0: dtalk.store.DelRecordReq.tp:type_name -> imparse.v1.Channel
	10, // 1: dtalk.store.GetRecordReq.tp:type_name -> imparse.v1.Channel
	10, // 2: dtalk.store.GetRecordsAfterMidReq.tp:type_name -> imparse.v1.Channel
	3,  // 3: dtalk.store.GetRecordsAfterMidReply.records:type_name -> dtalk.store.GetRecordReply
	0,  // 4: dtalk.store.Store.DelRecord:input_type -> dtalk.store.DelRecordReq
	2,  // 5: dtalk.store.Store.GetRecord:input_type -> dtalk.store.GetRecordReq
	8,  // 6: dtalk.store.Store.AddRecordFocus:input_type -> dtalk.store.AddRecordFocusReq
	4,  // 7: dtalk.store.Store.GetRecordsAfterMid:input_type -> dtalk.store.GetRecordsAfterMidReq
	6,  // 8: dtalk.store.Store.GetSyncRecordsAfterMid:input_type -> dtalk.store.GetSyncRecordsAfterMidReq
	1,  // 9: dtalk.store.Store.DelRecord:output_type -> dtalk.store.DelRecordReply
	3,  // 10: dtalk.store.Store.GetRecord:output_type -> dtalk.store.GetRecordReply
	9,  // 11: dtalk.store.Store.AddRecordFocus:output_type -> dtalk.store.AddRecordFocusReply
	5,  // 12: dtalk.store.Store.GetRecordsAfterMid:output_type -> dtalk.store.GetRecordsAfterMidReply
	7,  // 13: dtalk.store.Store.GetSyncRecordsAfterMid:output_type -> dtalk.store.GetSyncRecordsAfterMidReply
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordsAfterMidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordsAfterMidReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncRecordsAfterMidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncRecordsAfterMidReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordFocusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordFocusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
